# Customize this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.67.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    # cocoapods
    # carthage
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Deploy a new version through jenkins"
  lane :jenkins do
    sh “export LC_ALL=en_US.UTF-8”
    sh “export LANG=en_US.UTF-8”
    sh "rm -rf " + ENV["PWD"] + "/build"

    # build
    ipa_path = ENV["PWD"] +"/build"
    ipa_name = "iOS-Test-Debug.ipa"

    gym(
        configuration:"Debug",
        scheme:"iOS-Test",
        export_method:"development",
        clean:true,
        output_directory:ipa_path,
        output_name:ipa_name
    )

    sh "git checkout "+ ENV["PWD"] +"/iOS-Test/Assets.xcassets/ " 
    sh "fir p /Users/dfssit/.jenkins/jobs/iOS-Test/workspace/build/iOS-Test-Debug.ipa -T a2833eac188cef62a073cd9be4e14261"
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "iOS-Test") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "iOS-Test") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://docs.fastlane.tools/advanced/#control-configuration-by-lane-and-by-platform
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://docs.fastlane.tools/#metrics
